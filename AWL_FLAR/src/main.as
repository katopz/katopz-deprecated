package{	import away3dlite.containers.ObjectContainer3D;	import away3dlite.events.Loader3DEvent;	import away3dlite.loaders.Collada;	import away3dlite.loaders.Loader3D;	import com.greensock.TweenLite;	import com.greensock.plugins.*;	import com.sleepydesign.system.SystemUtil;	import com.squidder.flar.*;	import flash.display.*;	import flash.events.ContextMenuEvent;	import flash.geom.Matrix3D;	import org.libspark.flartoolkit.support.away3dlite.FLARCamera3D;	//160,90	//320,180	//640,360	//1920,1080	[SWF(backgroundColor="#000000", frameRate="30", width="640", height="480")]	public class main extends FLARTemplate	{		private var _model:ObjectContainer3D;		private var _container:ObjectContainer3D;		private var _isInit:Boolean = false;		private var _speed:Number = 1;		private var _rotationY:Number = 1;		override protected function onInit():void		{			debug = false;			view.mouseEnabled3D = false;			mouseEnabled = mouseChildren = false;			scene.addChild(_container = new ObjectContainer3D);			var _collada:Collada = new Collada();			_collada.bothsides = false;			_collada.scaling = 6;			var _loader:Loader3D = new Loader3D();			_loader.addEventListener(Loader3DEvent.LOAD_SUCCESS, onSuccess);			_loader.loadGeometry("assets/model.dae", _collada);			_container.addChild(_loader);			_loader.layer = new Sprite();			view.addChild(_loader.layer);			stage.scaleMode = StageScaleMode.SHOW_ALL;			SystemUtil.addContext(this, "LOWE Limited");			SystemUtil.addContext(this, "Toggle Fullscreen", onClick, true);			SystemUtil.addContext(this, "Increase Size", onIncreaseSize);			SystemUtil.addContext(this, "Decrease Size", onDecreaseSize);			SystemUtil.addContext(this, "Increase Speed", onIncreaseSpeed, true);			SystemUtil.addContext(this, "Decrease Speed", onDecreaseSpeed);			SystemUtil.addContext(this, "Increase RotaionY", onIncreaseRotaionY, true);			SystemUtil.addContext(this, "Decrease RotationY", onDecreaseRotaionY);		}		private function onIncreaseRotaionY(event:ContextMenuEvent):void		{			_rotationY++;		}		private function onDecreaseRotaionY(event:ContextMenuEvent):void		{			_rotationY--;		}		private function onIncreaseSize(event:ContextMenuEvent):void		{			_model.scaleZ += .25;			_model.scaleX = _model.scaleY = _model.scaleZ;		}		private function onDecreaseSize(event:ContextMenuEvent):void		{			_model.scaleZ -= .25;			_model.scaleX = _model.scaleY = _model.scaleZ;		}		private function onIncreaseSpeed(event:ContextMenuEvent):void		{			_speed += 1;		}		private function onDecreaseSpeed(event:ContextMenuEvent):void		{			_speed -= 1;		}		private function onClick(event:ContextMenuEvent):void		{			if (stage.displayState != StageDisplayState.FULL_SCREEN)				stage.displayState = StageDisplayState.FULL_SCREEN;			else				stage.displayState = StageDisplayState.NORMAL;		}		private function onSuccess(event:Loader3DEvent):void		{			_model = event.target.handle as ObjectContainer3D;			//_model.x = -50;			_model.rotationZ = 90;			_model.layer.alpha = 0;			_model.layer.visible = false;		}		override protected function onPostRender():void		{			if (_model)				_model.rotationY += _speed;		}		public function onLite():void		{			if (_isInit)				return;			_isInit = true;			view.camera = camera = new FLARCamera3D(_flarParam, 2);			camera.projection.fieldOfView = 60;			camera.focus = 10;			camera.zoom = 40;			camera.z = 0;			view.setSize(_customWidth, _customHeight);			var debugRect:Sprite = new Sprite();			debugRect.graphics.lineStyle(1, 0xFF0000);			debugRect.graphics.drawRect(0, 0, _customWidth, _customHeight);			debugRect.graphics.endFill();			//addChild(debugRect);		}		public function main()		{			TweenPlugin.activate([AutoAlphaPlugin]);			_markers = [];			//_markers.push( new FLARMarkerObj( "assets/flar/crash.pat" , 16 , 50 , 80 ) );			//_markers.push( new FLARMarkerObj( "assets/flar/kickdrum.pat" , 16 , 50 , 80 ) );			//_markers.push( new FLARMarkerObj( "assets/flar/ride.pat" , 16 , 50 , 80 ) );			//_markers.push( new FLARMarkerObj( "assets/flar/snare64.pat" , 64 , 100 , 100 ) );			_markers.push(new FLARMarkerObj("flars/marker64.pat", 64, 100, 100));			super();		}		override protected function onMarkersDetect():void		{			if (!_resultsArray)				return;			if (_resultsArray.length > 0)			{				_flarDetector.getTransmationMatrix(_resultsArray[0][0], _resultMat);				_container.transform.matrix3D.interpolateTo(new Matrix3D(transformMatrix(_resultMat)), .1);				if (_rotationY != 0)					_container.rotationY += _rotationY;				if (_model && _model.layer.alpha<1)					TweenLite.to(_model.layer, 1, {autoAlpha: 1});			}			else			{				if (_model && _model.layer.alpha>0)					TweenLite.to(_model.layer, 1, {autoAlpha: 0});			}			if (camera && camera.root != null)				onLite();		}	}}