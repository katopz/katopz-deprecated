package com.squidder.base.baseLoader.types {	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.media.Sound;	import flash.net.URLRequest;		import com.squidder.base.baseLoader.BaseLoaderProperties;		/**	 * Loader item for sounds (.mp3).	 * @author Jon Reiling	 */	public class SoundItem extends BaseLoaderItem {		private var _sound : Sound;		/**		 * Item constructor.		 * @param url URL of the item.		 * @param props Properties, if any, of the item.		 */		public function SoundItem(url : String, props : BaseLoaderProperties) {			super( url , props );						_sound = new Sound( );			_sound.addEventListener( Event.COMPLETE , _handleComplete , false , 0 , true );			_sound.addEventListener( ProgressEvent.PROGRESS , _handleProgress , false , 0 , true );			_sound.addEventListener( IOErrorEvent.IO_ERROR , _handleError , false , 0 , true );		}		/**		 * Begin loading the item.		 */		override public function load() : void {						_sound.load( new URLRequest( _url ) );		}		/**		 * Set the content of the item for access.		 */		override protected function _setContent() : void {			_content = _sound;		}					/**		 * Clean out the item.		 */		override public function clean() : void {						_sound.removeEventListener( Event.COMPLETE , _handleComplete );			_sound.removeEventListener( ProgressEvent.PROGRESS , _handleProgress );			_sound.removeEventListener( IOErrorEvent.IO_ERROR , _handleError );			if ( !_props.isPersistent ){								_sound = null;			}		}			}}