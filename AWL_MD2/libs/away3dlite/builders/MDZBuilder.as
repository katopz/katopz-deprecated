package away3dlite.builders{	import away3dlite.animators.MovieMesh;	import away3dlite.arcane;	import away3dlite.materials.BitmapMaterial;		import flash.utils.Dictionary;		import mx.graphics.codec.PNGEncoder;		import nochump.util.zip.ZipEntry;	import nochump.util.zip.ZipOutput;
	use namespace arcane;	public class MDZBuilder extends MD2Builder	{		public function MDZBuilder()		{			super();		}		public function getMDZ(meshes:Vector.<MovieMesh>):ZipOutput		{			var _mdz:ZipOutput = new ZipOutput();			var _pngEncoder:PNGEncoder = new PNGEncoder();			var _mesh:MovieMesh;			var _materials:Dictionary = new Dictionary(true);			var _name:String						// md2			for each (_mesh in meshes)			{				_mdz.putNextEntry(new ZipEntry(_mesh.name + ".md2"));				_mdz.write(getMD2(_mesh));				_mdz.closeEntry();				if (_mesh.material is BitmapMaterial)				{					var _isExist:Boolean = false;					for (_name in _materials)						_isExist = _isExist || _materials[_name] == BitmapMaterial(_mesh.material).bitmapData;										if(!_isExist)						_materials[_mesh.name] = BitmapMaterial(_mesh.material).bitmapData;				}			}			for (_name in _materials)			{				_mdz.putNextEntry(new ZipEntry(_name + ".png"));				_mdz.write(_pngEncoder.encode(_materials[_name]));				_mdz.closeEntry();			}			_mdz.finish();			_materials = null;			return _mdz;		}	}}