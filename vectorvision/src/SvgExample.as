package{	import com.zavoo.svg.SvgPath;		import flash.display.Graphics;	import flash.display.Sprite;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	[SWF(backgroundColor="#FFFFFF", frameRate="30", quality="MEDIUM", width="800", height="600")]	public class SvgExample extends Sprite	{		private var paths:Array = [];		private var canvas:Sprite;				public function SvgExample()		{			canvas = new Sprite();			addChild(canvas);						var loader:URLLoader = new URLLoader();			var request:URLRequest = new URLRequest("assets/thai.svg");			loader.load(request);			loader.addEventListener(Event.COMPLETE, onLoadComplete);		}		private function onLoadComplete(event:Event):void		{			var loader:URLLoader = URLLoader(event.target);			getPaths(loader.data);			drawPathsTo(canvas.graphics);		}				public function getPaths(svgData:String):void		{			var pathTagRE:RegExp = /(<path.*?\/>)/sig;		    var pathArray:Array;		    while(pathArray = pathTagRE.exec(svgData))		    	paths.push(new SvgPath(pathArray[1]));		}				public function drawPathsTo(grahics:Graphics, scale :Number = 1, offsetX:Number = 0, offsetY:Number = 0) : void 		{			for each(var path:SvgPath in paths)			{				grahics.beginFill(path.fill, path.fillAlpha);				grahics.lineStyle(path.strokeWidth,path.stroke,path.strokeAlpha);					for each(var line:Array in path.d)				{					switch(line[0])					{						case "M":							grahics.moveTo(Number(line[1][0]) * scale + offsetX, Number(line[1][1]) * scale + offsetY);							break;													case "L":							grahics.lineTo(Number(line[1][0]) * scale + offsetX, Number(line[1][1]) * scale + offsetY);							break;													case "C":							grahics.curveTo(Number(line[1][0]) * scale + offsetX, Number(line[1][1]) * scale + offsetY, 								Number(line[1][2]) * scale + offsetX, Number(line[1][3]) * scale + offsetY);							break;					}				}				grahics.endFill();			}		}	}}